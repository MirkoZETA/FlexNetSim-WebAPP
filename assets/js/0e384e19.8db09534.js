"use strict";(self.webpackChunkflex_net_sim_web_app=self.webpackChunkflex_net_sim_web_app||[]).push([[976],{7879:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"intro","title":"Intro","description":"A web-based playground for interacting with the Flex Net Sim optical network simulation library. Built with Docusaurus, a modern static website generator.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/FlexNetSim-WebAPP/docs/intro","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Developer Guide","permalink":"/FlexNetSim-WebAPP/docs/playground-dev-guide"}}');var r=n(4848),s=n(8453);const o={sidebar_position:1},a="Intro",l={},c=[{value:"Features",id:"features",level:2},{value:"Recent Changes",id:"recent-changes",level:2},{value:"Backend API",id:"backend-api",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"intro",children:"Intro"})}),"\n",(0,r.jsxs)(t.p,{children:["A web-based playground for interacting with the Flex Net Sim optical network simulation library. Built with ",(0,r.jsx)(t.a,{href:"https://docusaurus.io/",children:"Docusaurus"}),", a modern static website generator."]}),"\n",(0,r.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Interactive Simulation Interface"}),": Run optical network simulations with configurable parameters"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Multi-Simulation Support"}),": Run up to 3 different simulations simultaneously for comparison"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"3-Stage Workflow"}),": Configure network topology, set simulation parameters, and view results"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Real-time Results"}),": Watch simulation progress in real-time with formatted output"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"recent-changes",children:"Recent Changes"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Redesigned tab interface for improved usability"}),"\n",(0,r.jsx)(t.li,{children:"Improved simulation progress reporting and error handling"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"backend-api",children:"Backend API"}),"\n",(0,r.jsxs)(t.p,{children:["This app connects to the FlexNetSim API which provides simulation capabilities. For API details, see the ",(0,r.jsx)(t.a,{href:"https://github.com/MirkoZETA/FlexNetSim-API",children:"FlexNetSim-API"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);